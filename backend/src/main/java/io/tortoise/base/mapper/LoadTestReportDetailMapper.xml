<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.tortoise.base.mapper.LoadTestReportDetailMapper">
  <resultMap id="BaseResultMap" type="io.tortoise.base.domain.LoadTestReportDetail">
    <id column="report_id" jdbcType="VARCHAR" property="reportId" />
    <id column="part" jdbcType="BIGINT" property="part"/>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.tortoise.base.domain.LoadTestReportDetail">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
          report_id,
          part
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.tortoise.base.domain.LoadTestReportDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from load_test_report_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.tortoise.base.domain.LoadTestReportDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from load_test_report_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByPrimaryKey" parameterType="io.tortoise.base.domain.LoadTestReportDetailKey" resultMap="ResultMapWithBLOBs">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM load_test_report_detail
        WHERE report_id = #{reportId,jdbcType=VARCHAR}
        AND part = #{part,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="io.tortoise.base.domain.LoadTestReportDetailKey">
        DELETE FROM load_test_report_detail
        WHERE report_id = #{reportId,jdbcType=VARCHAR}
        AND part = #{part,jdbcType=BIGINT}
    </delete>
  <delete id="deleteByExample" parameterType="io.tortoise.base.domain.LoadTestReportDetailExample">
    delete from load_test_report_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.tortoise.base.domain.LoadTestReportDetail">
      insert into load_test_report_detail (report_id, part, content
      )
      values (#{reportId,jdbcType=VARCHAR}, #{part,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.tortoise.base.domain.LoadTestReportDetail">
    insert into load_test_report_detail
      <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="reportId != null">
              report_id,
          </if>
          <if test="part != null">
              part,
          </if>
          <if test="content != null">
              content,
          </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="reportId != null">
              #{reportId,jdbcType=VARCHAR},
          </if>
          <if test="part != null">
              #{part,jdbcType=BIGINT},
          </if>
          <if test="content != null">
              #{content,jdbcType=LONGVARCHAR},
          </if>
      </trim>
  </insert>
  <select id="countByExample" parameterType="io.tortoise.base.domain.LoadTestReportDetailExample" resultType="java.lang.Long">
    select count(*) from load_test_report_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update load_test_report_detail
      <set>
          <if test="record.reportId != null">
              report_id = #{record.reportId,jdbcType=VARCHAR},
          </if>
          <if test="record.part != null">
              part = #{record.part,jdbcType=BIGINT},
          </if>
          <if test="record.content != null">
              content = #{record.content,jdbcType=LONGVARCHAR},
          </if>
      </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
      update load_test_report_detail
      set report_id = #{record.reportId,jdbcType=VARCHAR},
      part = #{record.part,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
      <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
      update load_test_report_detail
      set report_id = #{record.reportId,jdbcType=VARCHAR},
      part = #{record.part,jdbcType=BIGINT}
      <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.tortoise.base.domain.LoadTestReportDetail">
    update load_test_report_detail
    <set>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
      where report_id = #{reportId,jdbcType=VARCHAR}
      and part = #{part,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.tortoise.base.domain.LoadTestReportDetail">
      update load_test_report_detail
      set content = #{content,jdbcType=LONGVARCHAR}
      where report_id = #{reportId,jdbcType=VARCHAR}
      and part = #{part,jdbcType=BIGINT}
  </update>
</mapper>
