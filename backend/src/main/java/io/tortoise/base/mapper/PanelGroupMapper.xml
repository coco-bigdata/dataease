<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.tortoise.base.mapper.PanelGroupMapper">
  <resultMap id="BaseResultMap" type="io.tortoise.base.domain.PanelGroup">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="node_type" jdbcType="VARCHAR" property="nodeType" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="panel_type" jdbcType="VARCHAR" property="panelType" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="extend1" jdbcType="VARCHAR" property="extend1" />
    <result column="extend2" jdbcType="VARCHAR" property="extend2" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.tortoise.base.domain.PanelGroupWithBLOBs">
    <result column="panel_style" jdbcType="LONGVARCHAR" property="panelStyle" />
    <result column="panel_data" jdbcType="LONGVARCHAR" property="panelData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, pid, `level`, node_type, create_by, create_time, panel_type, `source`, 
    extend1, extend2, remark
  </sql>
  <sql id="Blob_Column_List">
    panel_style, panel_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.tortoise.base.domain.PanelGroupExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from panel_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.tortoise.base.domain.PanelGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from panel_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from panel_group
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from panel_group
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="io.tortoise.base.domain.PanelGroupExample">
    delete from panel_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.tortoise.base.domain.PanelGroupWithBLOBs">
    insert into panel_group (id, `name`, pid, 
      `level`, node_type, create_by, 
      create_time, panel_type, `source`, 
      extend1, extend2, remark, 
      panel_style, panel_data)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{nodeType,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{panelType,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{extend1,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{panelStyle,jdbcType=LONGVARCHAR}, #{panelData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.tortoise.base.domain.PanelGroupWithBLOBs">
    insert into panel_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="panelType != null">
        panel_type,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="extend1 != null">
        extend1,
      </if>
      <if test="extend2 != null">
        extend2,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="panelStyle != null">
        panel_style,
      </if>
      <if test="panelData != null">
        panel_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="panelType != null">
        #{panelType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null">
        #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="panelStyle != null">
        #{panelStyle,jdbcType=LONGVARCHAR},
      </if>
      <if test="panelData != null">
        #{panelData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.tortoise.base.domain.PanelGroupExample" resultType="java.lang.Long">
    select count(*) from panel_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update panel_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.nodeType != null">
        node_type = #{record.nodeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.panelType != null">
        panel_type = #{record.panelType,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.extend1 != null">
        extend1 = #{record.extend1,jdbcType=VARCHAR},
      </if>
      <if test="record.extend2 != null">
        extend2 = #{record.extend2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.panelStyle != null">
        panel_style = #{record.panelStyle,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.panelData != null">
        panel_data = #{record.panelData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update panel_group
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=INTEGER},
      node_type = #{record.nodeType,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      panel_type = #{record.panelType,jdbcType=VARCHAR},
      `source` = #{record.source,jdbcType=VARCHAR},
      extend1 = #{record.extend1,jdbcType=VARCHAR},
      extend2 = #{record.extend2,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      panel_style = #{record.panelStyle,jdbcType=LONGVARCHAR},
      panel_data = #{record.panelData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update panel_group
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=INTEGER},
      node_type = #{record.nodeType,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      panel_type = #{record.panelType,jdbcType=VARCHAR},
      `source` = #{record.source,jdbcType=VARCHAR},
      extend1 = #{record.extend1,jdbcType=VARCHAR},
      extend2 = #{record.extend2,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.tortoise.base.domain.PanelGroupWithBLOBs">
    update panel_group
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="panelType != null">
        panel_type = #{panelType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=VARCHAR},
      </if>
      <if test="extend1 != null">
        extend1 = #{extend1,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="panelStyle != null">
        panel_style = #{panelStyle,jdbcType=LONGVARCHAR},
      </if>
      <if test="panelData != null">
        panel_data = #{panelData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.tortoise.base.domain.PanelGroupWithBLOBs">
    update panel_group
    set `name` = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      node_type = #{nodeType,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      panel_type = #{panelType,jdbcType=VARCHAR},
      `source` = #{source,jdbcType=VARCHAR},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      panel_style = #{panelStyle,jdbcType=LONGVARCHAR},
      panel_data = #{panelData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.tortoise.base.domain.PanelGroup">
    update panel_group
    set `name` = #{name,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      node_type = #{nodeType,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      panel_type = #{panelType,jdbcType=VARCHAR},
      `source` = #{source,jdbcType=VARCHAR},
      extend1 = #{extend1,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>